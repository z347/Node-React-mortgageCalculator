{"version":3,"sources":["store/types/get-list.types.ts","store/types/delete-from-list.types.ts","store/types/create-new-bank.types.ts","store/types/edit-bank.types.ts","store/types/active-bank.types.ts","components/Spinner/Spinner.tsx","utils/redux-logger.ts","store/reducers/get-list.reducer.ts","store/reducers/delete-from-list.reducer.ts","store/reducers/create-new-bank.reducer.ts","store/reducers/edit-bank.reducer.ts","store/reducers/active-bank.reducer.ts","store/reducers/root.reducer.ts","utils/dev.store.ts","routes/index.tsx","layouts/Header/styles.tsx","layouts/Header/Header.layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GET_LIST_REQUEST_IS_LOADING","GET_LIST_REQUEST_IS_SUCCESS","GET_LIST_REQUEST_IS_ERROR","DELETE_BANK_REQUEST_IS_LOADING","DELETE_BANK_REQUEST_IS_SUCCESS","DELETE_BANK_REQUEST_IS_ERROR","CREATE_BANK_IS_LOADING","CREATE_BANK_IS_SUCCESS","CREATE_BANK_IS_ERROR","EDIT_BANK_REQUEST_IS_LOADING","EDIT_BANK_REQUEST_IS_SUCCESS","EDIT_BANK_REQUEST_IS_ERROR","SET_ACTIVE_BANK","useStyles","makeStyles","container","display","flexDirection","alignItems","marginTop","Spinner","classes","className","logger","createLogger","duration","collapsed","colors","title","prevState","action","nextState","error","initialState","loading","payload","_id","name","interestRate","maximumLoan","minimumDownPayment","loanTerm","delete","success","edit","rootReducer","combineReducers","list","state","type","deleteBank","createBank","editBank","activeBank","middlewares","thunk","enhancedStore","composeWithDevTools","applyMiddleware","localStore","serialisedState","localStorage","getItem","preloadedState","JSON","parse","store","createStore","subscribe","getState","setItem","stringify","HomePage","React","lazy","CalculatorPage","withRouter","fallback","exact","path","component","theme","button","marginRight","spacing","a","color","textDecoration","linkTitle","fontSize","AppBarCustom","AppBar","position","Toolbar","variant","Button","to","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7f872ad.chunk.js","sourcesContent":["import { AnyAction } from 'redux';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\nexport const GET_LIST_REQUEST_IS_LOADING = 'GET_LIST_REQUEST_IS_LOADING';\nexport const GET_LIST_REQUEST_IS_SUCCESS = 'GET_LIST_REQUEST_IS_SUCCESS';\nexport const GET_LIST_REQUEST_IS_ERROR = 'GET_LIST_REQUEST_IS_ERROR';\n\nexport type ListType = [\n  {\n    _id: string;\n    name: string;\n    interestRate: number;\n    maximumLoan: number;\n    minimumDownPayment: number;\n    loanTerm: number;\n  },\n];\n\nexport interface IDefaultState {\n  loading: boolean;\n  payload: ListType;\n  error: boolean;\n}\n\nexport interface IGetListIsLoading {\n  type: typeof GET_LIST_REQUEST_IS_LOADING;\n  loading: boolean;\n}\n\nexport interface IGetListIsSuccess {\n  type: typeof GET_LIST_REQUEST_IS_SUCCESS;\n  loading: boolean;\n  payload: ListType;\n}\n\nexport interface IGetListIsError {\n  type: typeof GET_LIST_REQUEST_IS_ERROR;\n  loading: boolean;\n  error: boolean;\n}\n\nexport type ListDispatchTypes = IGetListIsLoading | IGetListIsSuccess | IGetListIsError;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type ThunkActionType = ThunkAction<\n  Promise<void>,\n  Record<string, never>,\n  Record<string, never>,\n  AnyAction\n>;\n\nexport type ThunkDispatchType = ThunkDispatch<\n  Record<string, never>,\n  Record<string, never>,\n  AnyAction\n>;\n","import { AnyAction } from 'redux';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\nexport const DELETE_BANK_REQUEST_IS_LOADING = 'DELETE_BANK_REQUEST_IS_LOADING';\nexport const DELETE_BANK_REQUEST_IS_SUCCESS = 'DELETE_BANK_REQUEST_IS_SUCCESS';\nexport const DELETE_BANK_REQUEST_IS_ERROR = 'DELETE_BANK_REQUEST_IS_ERROR';\n\nexport interface IDefaultState {\n  loading: boolean;\n  delete: boolean;\n  error: boolean;\n}\n\nexport interface IDeleteBankIsLoading {\n  type: typeof DELETE_BANK_REQUEST_IS_LOADING;\n  loading: boolean;\n}\n\nexport interface IDeleteBankIsSuccess {\n  type: typeof DELETE_BANK_REQUEST_IS_SUCCESS;\n  loading: boolean;\n  delete: boolean;\n}\n\nexport interface IDeleteBankIsError {\n  type: typeof DELETE_BANK_REQUEST_IS_ERROR;\n  loading: boolean;\n  error: boolean;\n}\n\nexport type DeleteBankDispatchTypes =\n  | IDeleteBankIsLoading\n  | IDeleteBankIsSuccess\n  | IDeleteBankIsError;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type ThunkActionType = ThunkAction<\n  Promise<void>,\n  Record<string, never>,\n  Record<string, never>,\n  AnyAction\n>;\n\nexport type ThunkDispatchType = ThunkDispatch<\n  Record<string, never>,\n  Record<string, never>,\n  AnyAction\n>;\n","import { AnyAction } from 'redux';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\nexport const CREATE_BANK_IS_LOADING = 'CREATE_BANK_IS_LOADING';\nexport const CREATE_BANK_IS_SUCCESS = 'CREATE_BANK_IS_SUCCESS';\nexport const CREATE_BANK_IS_ERROR = 'CREATE_BANK_IS_ERROR';\n\nexport interface IDefaultState {\n  loading: boolean;\n  success: boolean;\n  error: boolean;\n}\n\nexport interface ICreateIsLoading {\n  type: typeof CREATE_BANK_IS_LOADING;\n  loading: boolean;\n}\n\nexport interface ICreateIsSuccess {\n  type: typeof CREATE_BANK_IS_SUCCESS;\n  loading: boolean;\n  success: boolean;\n}\n\nexport interface ICreateIsError {\n  type: typeof CREATE_BANK_IS_ERROR;\n  loading: boolean;\n  error: boolean;\n}\n\nexport type CreationDispatchTypes = ICreateIsLoading | ICreateIsSuccess | ICreateIsError;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type ThunkActionType = ThunkAction<\n  Promise<void>,\n  Record<string, never>,\n  Record<string, never>,\n  AnyAction\n>;\n\nexport type ThunkDispatchType = ThunkDispatch<\n  Record<string, never>,\n  Record<string, never>,\n  AnyAction\n>;\n","import { AnyAction } from 'redux';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\n\nexport const EDIT_BANK_REQUEST_IS_LOADING = 'EDIT_BANK_REQUEST_IS_LOADING';\nexport const EDIT_BANK_REQUEST_IS_SUCCESS = 'EDIT_BANK_REQUEST_IS_SUCCESS';\nexport const EDIT_BANK_REQUEST_IS_ERROR = 'EDIT_BANK_REQUEST_IS_ERROR';\n\nexport interface IDefaultState {\n  loading: boolean;\n  edit: boolean;\n  error: boolean;\n}\n\nexport interface IEditIsLoading {\n  type: typeof EDIT_BANK_REQUEST_IS_LOADING;\n  loading: boolean;\n}\n\nexport interface IEditIsSuccess {\n  type: typeof EDIT_BANK_REQUEST_IS_SUCCESS;\n  loading: boolean;\n  edit: boolean;\n}\n\nexport interface IEditIsError {\n  type: typeof EDIT_BANK_REQUEST_IS_ERROR;\n  loading: boolean;\n  error: boolean;\n}\n\nexport type EditDispatchTypes = IEditIsLoading | IEditIsSuccess | IEditIsError;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type ThunkActionType = ThunkAction<\n  Promise<void>,\n  Record<string, never>,\n  Record<string, never>,\n  AnyAction\n>;\n\nexport type ThunkDispatchType = ThunkDispatch<\n  Record<string, never>,\n  Record<string, never>,\n  AnyAction\n>;\n","export const SET_ACTIVE_BANK = 'SET_ACTIVE_BANK';\n\nexport type ActiveBankType = {\n  _id: string;\n  name: string;\n  interestRate: number;\n  maximumLoan: number;\n  minimumDownPayment: number;\n  loanTerm: number;\n};\n\nexport interface IDefaultState {\n  payload: ActiveBankType;\n}\n\nexport interface IActiveBankIsSet {\n  type: typeof SET_ACTIVE_BANK;\n  payload: ActiveBankType;\n}\n","import { FC } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '5rem',\n  },\n}));\n\nconst Spinner: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport { Spinner };\n","import { createLogger } from 'redux-logger';\n\nexport const logger = createLogger({\n  duration: true,\n  collapsed: true,\n  colors: {\n    title: () => '#139BFE',\n    prevState: () => '#1C5FAF',\n    action: () => '#149945',\n    nextState: () => '#A47104',\n    error: () => '#FF0005',\n  },\n});\n","import {\n  GET_LIST_REQUEST_IS_LOADING,\n  GET_LIST_REQUEST_IS_SUCCESS,\n  GET_LIST_REQUEST_IS_ERROR,\n  IDefaultState,\n  ListDispatchTypes,\n} from '../types/get-list.types';\n\nconst initialState: IDefaultState = {\n  loading: false,\n  payload: [\n    {\n      _id: 'plug',\n      name: 'plug',\n      interestRate: 0,\n      maximumLoan: 0,\n      minimumDownPayment: 0,\n      loanTerm: 0,\n    },\n  ],\n  error: false,\n};\n\nfunction listOfBanksReducer(state = initialState, action: ListDispatchTypes): IDefaultState {\n  switch (action.type) {\n    case GET_LIST_REQUEST_IS_LOADING:\n      return {\n        ...state,\n        loading: action.loading,\n      };\n    case GET_LIST_REQUEST_IS_SUCCESS:\n      return {\n        ...state,\n        loading: action.loading,\n        payload: action.payload,\n      };\n    case GET_LIST_REQUEST_IS_ERROR:\n      return {\n        ...state,\n        loading: action.loading,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport { listOfBanksReducer };\n","import {\n  DELETE_BANK_REQUEST_IS_LOADING,\n  DELETE_BANK_REQUEST_IS_SUCCESS,\n  DELETE_BANK_REQUEST_IS_ERROR,\n  DeleteBankDispatchTypes,\n  IDefaultState,\n} from '../types/delete-from-list.types';\n\nconst initialState: IDefaultState = {\n  loading: false,\n  delete: false,\n  error: false,\n};\n\nfunction deleteBankReducer(state = initialState, action: DeleteBankDispatchTypes): IDefaultState {\n  switch (action.type) {\n    case DELETE_BANK_REQUEST_IS_LOADING:\n      return {\n        ...state,\n        loading: action.loading,\n      };\n    case DELETE_BANK_REQUEST_IS_SUCCESS:\n      return {\n        ...state,\n        loading: action.loading,\n        delete: action.delete,\n      };\n    case DELETE_BANK_REQUEST_IS_ERROR:\n      return {\n        ...state,\n        loading: action.loading,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport { deleteBankReducer };\n","import {\n  CREATE_BANK_IS_LOADING,\n  CREATE_BANK_IS_SUCCESS,\n  CREATE_BANK_IS_ERROR,\n  CreationDispatchTypes,\n  IDefaultState,\n} from '../types/create-new-bank.types';\n\nconst initialState: IDefaultState = {\n  loading: false,\n  success: false,\n  error: false,\n};\n\nfunction creatNewBankReducer(\n  state = initialState,\n  action: CreationDispatchTypes,\n): IDefaultState {\n  switch (action.type) {\n    case CREATE_BANK_IS_LOADING:\n      return {\n        ...state,\n        loading: action.loading,\n      };\n    case CREATE_BANK_IS_SUCCESS:\n      return {\n        ...state,\n        loading: action.loading,\n        success: action.success,\n      };\n    case CREATE_BANK_IS_ERROR:\n      return {\n        ...state,\n        loading: action.loading,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport { creatNewBankReducer };\n","import {\n  EDIT_BANK_REQUEST_IS_LOADING,\n  EDIT_BANK_REQUEST_IS_SUCCESS,\n  EDIT_BANK_REQUEST_IS_ERROR,\n  EditDispatchTypes,\n  IDefaultState,\n} from '../types/edit-bank.types';\n\nconst initialState: IDefaultState = {\n  loading: false,\n  edit: false,\n  error: false,\n};\n\nfunction editBankReducer(\n  state = initialState,\n  action: EditDispatchTypes,\n): IDefaultState {\n  switch (action.type) {\n    case EDIT_BANK_REQUEST_IS_LOADING:\n      return {\n        ...state,\n        loading: action.loading,\n      };\n    case EDIT_BANK_REQUEST_IS_SUCCESS:\n      return {\n        ...state,\n        loading: action.loading,\n        edit: action.edit,\n      };\n    case EDIT_BANK_REQUEST_IS_ERROR:\n      return {\n        ...state,\n        loading: action.loading,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport { editBankReducer };\n","import { IDefaultState, SET_ACTIVE_BANK, IActiveBankIsSet } from '../types/active-bank.types';\n\nconst initialState: IDefaultState = {\n  payload: {\n    _id: 'plug',\n    name: 'plug',\n    interestRate: 0,\n    maximumLoan: 0,\n    minimumDownPayment: 0,\n    loanTerm: 0,\n  },\n};\n\nfunction activeBankReducer(state = initialState, action: IActiveBankIsSet): IDefaultState {\n  switch (action.type) {\n    case SET_ACTIVE_BANK:\n      return {\n        ...state,\n        payload: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport { activeBankReducer };\n","import { combineReducers } from 'redux';\n\nimport { listOfBanksReducer } from './get-list.reducer';\nimport { deleteBankReducer } from './delete-from-list.reducer';\nimport { creatNewBankReducer } from './create-new-bank.reducer';\nimport { editBankReducer } from './edit-bank.reducer';\nimport { activeBankReducer } from './active-bank.reducer';\n\nconst rootReducer = combineReducers({\n  list: listOfBanksReducer,\n  deleteBank: deleteBankReducer,\n  createBank: creatNewBankReducer,\n  editBank: editBankReducer,\n  activeBank: activeBankReducer,\n});\n\nexport { rootReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport { logger } from 'utils';\nimport { rootReducer } from 'store/reducers/root.reducer';\n\nconst middlewares = [thunk, logger];\nconst enhancedStore = composeWithDevTools(applyMiddleware(...middlewares));\n\nconst localStore = 'this-react-application-local-store';\nconst serialisedState = localStorage.getItem(localStore);\nconst preloadedState = serialisedState ? JSON.parse(serialisedState) : null;\n\nexport const store = preloadedState\n  ? createStore(rootReducer, preloadedState, enhancedStore)\n  : createStore(rootReducer, enhancedStore);\n\nstore.subscribe(() => {\n  const state = store.getState();\n  localStorage.setItem(localStore, JSON.stringify(state));\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React, { FC, Suspense } from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\n\nimport { Spinner } from 'components/Spinner/Spinner';\n\nconst HomePage = React.lazy(() => import('pages/Banks/Banks.page'));\nconst CalculatorPage = React.lazy(() => import('pages/Calculator/Calculator.page'));\n\nconst MainRouter: FC = () => (\n  <Suspense fallback={Spinner}>\n    <Switch>\n      <Route exact path=\"/\" component={HomePage} />\n      <Route exact path=\"/calculator\" component={CalculatorPage} />\n    </Switch>\n  </Suspense>\n);\n\nexport default withRouter(MainRouter);\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginRight: theme.spacing(2),\n  },\n  a: {\n    color: 'inherit',\n    textDecoration: 'inherit',\n  },\n  linkTitle: {\n    color: 'inherit',\n    textDecoration: 'inherit',\n    fontSize: '1.25rem',\n  },\n}));\n\nexport { useStyles };\n","import { FC } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport { useStyles } from './styles';\n\nexport const AppBarCustom: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar variant=\"dense\">\n        <Button variant=\"outlined\" color=\"inherit\" className={classes.button}>\n          <Link to=\"/\" className={classes.a}>\n            Home\n          </Link>\n        </Button>\n        <Button variant=\"outlined\" color=\"inherit\" className={classes.button}>\n          <Link to=\"/calculator\" className={classes.a}>\n            Calculator\n          </Link>\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withRouter(AppBarCustom);\n","import { FC } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport 'typeface-roboto';\r\n\r\n// import { store } from 'store/root.store';\r\nimport { store } from 'utils/dev.store';\r\nimport MainRouter from 'routes';\r\nimport { AppBarCustom } from 'layouts/Header/Header.layout';\r\n\r\nconst App: FC = () => (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <CssBaseline />\r\n      <AppBarCustom />\r\n      <main>\r\n        <MainRouter />\r\n      </main>\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nexport { App };\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// reportWebVitals(console.log);\n"],"sourceRoot":""}