{"version":3,"sources":["data/api/url-info.ts","store/actions/get-list.action.ts","pages/Banks/components/List/styles.tsx","pages/Banks/components/List/EmptyList.tsx","store/actions/delete-from-list.action.ts","pages/Banks/components/List/ButtonDelete.tsx","store/actions/edit-bank.action.ts","pages/Banks/components/List/FormEdit.tsx","pages/Banks/components/List/ButtonEdit.tsx","pages/Banks/components/List/List.tsx","pages/Banks/components/ButtonCreate/style.tsx","pages/Banks/components/ButtonCreate/ButtonCreate.tsx","pages/Banks/components/ButtonCancel/style.tsx","pages/Banks/components/ButtonCancel/ButtonCancel.tsx","store/actions/create-new-bank.action.ts","pages/Banks/components/FormCreate/styles.tsx","pages/Banks/components/FormCreate/Form.tsx","pages/Banks/components/FormCreate/Container.tsx","pages/Banks/Banks.page.tsx"],"names":["ApiUrlInfo","Object","freeze","prefix","banksInfo","deleteBank","requestGetListWithBanks","dispatch","a","type","GET_LIST_REQUEST_IS_LOADING","loading","fetch","method","cache","headers","response","json","answer","console","log","ok","data","GET_LIST_REQUEST_IS_SUCCESS","payload","listIsError","GET_LIST_REQUEST_IS_ERROR","error","useStyles","makeStyles","theme","root","width","margin","display","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","wrapper","flexDirection","marginTop","container","alignItems","paragraph","modal","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","minWidth","button","float","EmptyList","classes","className","requestDeleteOneBankFromList","bankId","DELETE_BANK_REQUEST_IS_LOADING","status","DELETE_BANK_REQUEST_IS_SUCCESS","delete","deleteBankIsError","DELETE_BANK_REQUEST_IS_ERROR","ButtonDelete","useDispatch","handleClick","event","preventDefault","IconButton","aria-label","onClick","editRequest","EDIT_BANK_REQUEST_IS_LOADING","body","JSON","stringify","EDIT_BANK_REQUEST_IS_SUCCESS","edit","editBankIsError","EDIT_BANK_REQUEST_IS_ERROR","FormEdit","id","useForm","register","handleSubmit","errors","submitHandler","autoComplete","onSubmit","TextField","label","name","variant","inputRef","required","Alert","severity","interestRate","maximumLoan","loanTerm","Button","color","size","startIcon","ButtonEdit","useState","open","setOpen","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","BanksList","list","listJSX","map","item","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","minimumDownPayment","_id","ButtonCreate","common","white","main","light","ButtonCancel","creationRequest","CREATE_BANK_IS_LOADING","CREATE_BANK_IS_SUCCESS","success","creationIsError","CREATE_BANK_IS_ERROR","grey","flexGrow","height","title","marginBottom","FormTask","textAlign","verticalAlign","FormCreateBank","target","reset","ContainerForm","Container","maxWidth","component","Paper","elevation","Grid","justify","gutterBottom","BanksPage","useEffect","useSelector","state","createBank","setCreateBank","prevState","buttons","length","form","requestProcessing","Spinner"],"mappings":"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","file":"static/js/5.acf425dc.chunk.js","sourcesContent":["export const ApiUrlInfo = Object.freeze({\n  prefix: '/api',\n  banksInfo: '/banks-info',\n  deleteBank: '/bank',\n});\n","import { ApiUrlInfo } from 'data/api/url-info';\nimport {\n  GET_LIST_REQUEST_IS_LOADING,\n  GET_LIST_REQUEST_IS_SUCCESS,\n  GET_LIST_REQUEST_IS_ERROR,\n  IGetListIsLoading,\n  IGetListIsSuccess,\n  IGetListIsError,\n  ListType,\n  ThunkActionType,\n  ThunkDispatchType,\n} from '../types/get-list.types';\n\nconst { prefix, banksInfo } = ApiUrlInfo;\n\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nfunction requestGetListWithBanks(): ThunkActionType {\n  return async (dispatch: ThunkDispatchType): Promise<void> => {\n    try {\n      dispatch(listIsLoading());\n\n      const response = await fetch(prefix + banksInfo, {\n        method: 'GET',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n      });\n      const answer: ListType = await response.json();\n\n      console.log(answer);\n\n      response.ok ? dispatch(listIsSuccess(answer)) : dispatch(listIsError());\n    } catch (e) {\n      dispatch(listIsError());\n    }\n  };\n}\n\n/* eslint-enable */\n\nfunction listIsLoading(): IGetListIsLoading {\n  return {\n    type: GET_LIST_REQUEST_IS_LOADING,\n    loading: true,\n  };\n}\n\nfunction listIsSuccess(data: ListType): IGetListIsSuccess {\n  return {\n    type: GET_LIST_REQUEST_IS_SUCCESS,\n    loading: false,\n    payload: data,\n  };\n}\n\nfunction listIsError(): IGetListIsError {\n  return {\n    type: GET_LIST_REQUEST_IS_ERROR,\n    loading: false,\n    error: true,\n  };\n}\n\n// eslint-disable-next-line\nexport { requestGetListWithBanks, listIsLoading, listIsSuccess, listIsError };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '75%',\n    margin: '100px auto',\n\n    '& .MuiAccordionDetails-root': {\n      display: 'block',\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n    width: '100%',\n    marginTop: '40px',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '3rem',\n  },\n  paragraph: {\n    fontSize: theme.typography.pxToRem(25),\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    minWidth: '500px',\n  },\n  button: {\n    float: 'right',\n    marginTop: '25px',\n  },\n}));\n\nexport { useStyles };\n","import { FC } from 'react';\n\nimport { useStyles } from './styles';\n\nconst EmptyList: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <p className={classes.paragraph}>List of banks is empty.</p>\n    </div>\n  );\n};\n\nexport { EmptyList };\n","import { ApiUrlInfo } from 'data/api/url-info';\nimport {\n  DELETE_BANK_REQUEST_IS_ERROR,\n  DELETE_BANK_REQUEST_IS_LOADING,\n  DELETE_BANK_REQUEST_IS_SUCCESS,\n  IDeleteBankIsError,\n  IDeleteBankIsLoading,\n  IDeleteBankIsSuccess,\n  ThunkActionType,\n  ThunkDispatchType,\n} from '../types/delete-from-list.types';\n\nconst { prefix, deleteBank } = ApiUrlInfo;\n\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nfunction requestDeleteOneBankFromList(bankId: string): ThunkActionType {\n  return async (dispatch: ThunkDispatchType): Promise<void> => {\n    try {\n      dispatch(deleteBankIsLoading());\n\n      const response = await fetch(`${prefix}${deleteBank}:${bankId}`, {\n        method: 'DELETE',\n        cache: 'no-cache',\n      });\n\n      response.ok && response.status === 200\n        ? dispatch(deleteBankIsSuccess())\n        : dispatch(deleteBankIsError());\n    } catch (e) {\n      dispatch(deleteBankIsError());\n    }\n  };\n}\n\n/* eslint-enable */\n\nfunction deleteBankIsLoading(): IDeleteBankIsLoading {\n  return {\n    type: DELETE_BANK_REQUEST_IS_LOADING,\n    loading: true,\n  };\n}\n\nfunction deleteBankIsSuccess(): IDeleteBankIsSuccess {\n  return {\n    type: DELETE_BANK_REQUEST_IS_SUCCESS,\n    loading: false,\n    delete: true,\n  };\n}\n\nfunction deleteBankIsError(): IDeleteBankIsError {\n  return {\n    type: DELETE_BANK_REQUEST_IS_ERROR,\n    loading: false,\n    error: true,\n  };\n}\n\nexport {\n  requestDeleteOneBankFromList,\n  deleteBankIsLoading,\n  deleteBankIsSuccess,\n  deleteBankIsError,\n};\n","import { FC, MouseEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { requestDeleteOneBankFromList } from 'store/actions/delete-from-list.action';\nimport { requestGetListWithBanks } from 'store/actions/get-list.action';\n\ntype PropTypes = {\n  data: string;\n};\n\nconst ButtonDelete: FC<PropTypes> = ({ data }: PropTypes) => {\n  const dispatch = useDispatch();\n\n  const handleClick = async (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    await dispatch(requestDeleteOneBankFromList(data));\n    await dispatch(requestGetListWithBanks());\n  };\n\n  return (\n    <IconButton aria-label=\"delete\" onClick={handleClick}>\n      <DeleteIcon />\n    </IconButton>\n  );\n};\n\nexport { ButtonDelete };\n","import { ApiUrlInfo } from 'data/api/url-info';\nimport { IEditBankArguments } from 'types/handlers/edit-bank.arguments';\nimport {\n  EDIT_BANK_REQUEST_IS_LOADING,\n  EDIT_BANK_REQUEST_IS_SUCCESS,\n  EDIT_BANK_REQUEST_IS_ERROR,\n  IEditIsLoading,\n  IEditIsSuccess,\n  IEditIsError,\n  ThunkActionType,\n  ThunkDispatchType,\n} from '../types/edit-bank.types';\n\nconst { prefix, banksInfo } = ApiUrlInfo;\n\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nfunction editRequest(data: IEditBankArguments): ThunkActionType {\n  return async (dispatch: ThunkDispatchType): Promise<void> => {\n    try {\n      dispatch(editBankIsLoading());\n\n      const response = await fetch(prefix + banksInfo, {\n        method: 'PATCH',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n        body: JSON.stringify(data),\n      });\n\n      response.ok ? dispatch(editBankIsSuccess()) : dispatch(editBankIsError());\n    } catch (e) {\n      dispatch(editBankIsError());\n    }\n  };\n}\n\n/* eslint-enable */\n\nfunction editBankIsLoading(): IEditIsLoading {\n  return {\n    type: EDIT_BANK_REQUEST_IS_LOADING,\n    loading: true,\n  };\n}\n\nfunction editBankIsSuccess(): IEditIsSuccess {\n  return {\n    type: EDIT_BANK_REQUEST_IS_SUCCESS,\n    loading: false,\n    edit: true,\n  };\n}\n\nfunction editBankIsError(): IEditIsError {\n  return {\n    type: EDIT_BANK_REQUEST_IS_ERROR,\n    loading: false,\n    error: true,\n  };\n}\n\n// eslint-disable-next-line\nexport { editRequest, editBankIsLoading, editBankIsSuccess, editBankIsError };\n","import { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport { editRequest } from 'store/actions/edit-bank.action';\nimport { requestGetListWithBanks } from 'store/actions/get-list.action';\nimport { IEditBankArguments } from 'types/handlers/edit-bank.arguments';\nimport { useStyles } from './styles';\n\ntype PropTypes = {\n  id: string;\n};\n\nconst FormEdit: FC<PropTypes> = ({ id }: PropTypes) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm<IEditBankArguments>();\n\n  const submitHandler = async (data: any, event: any) => {\n    event.preventDefault();\n    // eslint-disable-next-line no-param-reassign\n    data.id = id;\n    await dispatch(editRequest(data));\n    await dispatch(requestGetListWithBanks());\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit(submitHandler)}>\n      <TextField\n        label=\"Bank name *\"\n        id=\"name\"\n        name=\"name\"\n        type=\"text\"\n        variant=\"outlined\"\n        inputRef={register({\n          required: true,\n        })}\n      />\n      {errors.name && <Alert severity=\"error\">Bank name is required</Alert>}\n\n      <TextField\n        label=\"Interest rate *\"\n        id=\"interestRate\"\n        name=\"interestRate\"\n        type=\"number\"\n        variant=\"outlined\"\n        inputRef={register({\n          required: true,\n        })}\n      />\n      {errors.interestRate && <Alert severity=\"error\">Interest rate is required</Alert>}\n\n      <TextField\n        label=\"Maximum loan *\"\n        id=\"maximumLoan\"\n        name=\"maximumLoan\"\n        type=\"number\"\n        variant=\"outlined\"\n        inputRef={register({\n          required: true,\n        })}\n      />\n      {errors.maximumLoan && <Alert severity=\"error\">Maximum loan is required</Alert>}\n\n      <TextField\n        label=\"Minimum down payment *\"\n        id=\"minimumDownPayment\"\n        name=\"minimumDownPayment\"\n        type=\"number\"\n        variant=\"outlined\"\n        inputRef={register({\n          required: true,\n        })}\n      />\n      {errors.maximumLoan && <Alert severity=\"error\">Minimum down payment is required</Alert>}\n\n      <TextField\n        label=\"Loan term *\"\n        id=\"loanTerm\"\n        name=\"loanTerm\"\n        type=\"number\"\n        variant=\"outlined\"\n        inputRef={register({\n          required: true,\n        })}\n      />\n      {errors.loanTerm && <Alert severity=\"error\">Loan term is required</Alert>}\n\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          size=\"small\"\n          className={classes.button}\n          startIcon={<SaveIcon />}\n          type=\"submit\"\n        >\n          Save\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport { FormEdit };\n","import { FC, useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { FormEdit } from './FormEdit';\nimport { useStyles } from './styles';\n\ntype PropTypes = {\n  bankId: string;\n};\n\nconst ButtonEdit: FC<PropTypes> = ({ bankId }: PropTypes) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <IconButton aria-label=\"edit\" onClick={handleOpen}>\n        <EditIcon />\n      </IconButton>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Edit bank info</h2>\n            <FormEdit id={bankId} />\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  );\n};\n\nexport { ButtonEdit };\n","import { FC } from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { ListType } from 'store/types/get-list.types';\n\nimport { ButtonDelete } from './ButtonDelete';\nimport { ButtonEdit } from './ButtonEdit';\nimport { useStyles } from './styles';\n\ntype PropTypes = {\n  list: ListType;\n};\n\n/* eslint-disable */\n\nconst BanksList: FC<PropTypes> = ({ list }: PropTypes) => {\n  const classes = useStyles();\n\n  const listJSX = list.map((item) => (\n    <Accordion key={item._id}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography className={classes.heading}>Bank: {item.name}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Typography>Interest rate: {item.interestRate} %</Typography>\n        <Typography>Maximum loan: {item.maximumLoan} $</Typography>\n        <Typography>Minimum down payment: {item.minimumDownPayment} %</Typography>\n        <Typography>Loan term: {item.loanTerm} months</Typography>\n        <div className={classes.wrapper}>\n          <ButtonDelete data={item._id} />\n          <ButtonEdit bankId={item._id} />\n        </div>\n      </AccordionDetails>\n    </Accordion>\n  ));\n\n  return (\n    <div className={classes.root}>\n      <h1>List of the banks</h1>\n      {listJSX}\n    </div>\n  );\n};\n\nexport { BanksList };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '3rem',\n  },\n}));\n\nexport { useStyles };\n","import { FC } from 'react';\nimport Button from '@material-ui/core/Button';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport { useStyles } from './style';\n\ntype PropTypes = {\n  handleClick: () => void;\n};\n\nconst ButtonCreate: FC<PropTypes> = ({ handleClick }: PropTypes) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        startIcon={<AddCircleIcon />}\n        onClick={handleClick}\n      >\n        Add bank\n      </Button>\n    </div>\n  );\n};\n\nexport { ButtonCreate };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '3rem',\n  },\n  root: {\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.error.main,\n\n    '&:hover': {\n      backgroundColor: theme.palette.error.light,\n    },\n  },\n}));\n\nexport { useStyles };\n","import { FC } from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport { useStyles } from './style';\n\ntype PropTypes = {\n  handleClick: () => void;\n};\n\nconst ButtonCancel: FC<PropTypes> = ({ handleClick }: PropTypes) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.container}>\n      <Button\n        className={classes.root}\n        variant=\"contained\"\n        size=\"large\"\n        onClick={handleClick}\n      >\n        Cancel\n      </Button>\n    </div>\n  );\n};\n\nexport { ButtonCancel };\n","import { ApiUrlInfo } from 'data/api/url-info';\nimport { ICreationBankArguments } from 'types/handlers/creation-bank.arguments';\nimport {\n  CREATE_BANK_IS_LOADING,\n  CREATE_BANK_IS_SUCCESS,\n  CREATE_BANK_IS_ERROR,\n  ICreateIsLoading,\n  ICreateIsSuccess,\n  ICreateIsError,\n  ThunkActionType,\n  ThunkDispatchType,\n} from '../types/create-new-bank.types';\n\nconst { prefix, banksInfo } = ApiUrlInfo;\n\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nfunction creationRequest(data: ICreationBankArguments): ThunkActionType {\n  return async (dispatch: ThunkDispatchType): Promise<void> => {\n    try {\n      dispatch(creationIsLoading());\n\n      const response = await fetch(prefix + banksInfo, {\n        method: 'POST',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json; charset=UTF-8' },\n        body: JSON.stringify(data),\n      });\n\n      response.ok ? dispatch(creationIsSuccess()) : dispatch(creationIsError());\n    } catch (e) {\n      dispatch(creationIsError());\n    }\n  };\n}\n\n/* eslint-enable */\n\nfunction creationIsLoading(): ICreateIsLoading {\n  return {\n    type: CREATE_BANK_IS_LOADING,\n    loading: true,\n  };\n}\n\nfunction creationIsSuccess(): ICreateIsSuccess {\n  return {\n    type: CREATE_BANK_IS_SUCCESS,\n    loading: false,\n    success: true,\n  };\n}\n\nfunction creationIsError(): ICreateIsError {\n  return {\n    type: CREATE_BANK_IS_ERROR,\n    loading: false,\n    error: true,\n  };\n}\n\n// eslint-disable-next-line\nexport { creationRequest, creationIsLoading, creationIsSuccess, creationIsError };\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    margin: theme.spacing(5),\n    backgroundColor: theme.palette.grey[300],\n  },\n  paper: {\n    flexGrow: 1,\n    height: '100%',\n    backgroundColor: 'primary',\n  },\n  title: {\n    margin: theme.spacing(5),\n    marginBottom: theme.spacing(10),\n  },\n  FormTask: {\n    textAlign: 'center',\n    verticalAlign: 'middle',\n    width: '100%',\n    '& > div': {\n      margin: theme.spacing(1),\n      width: '75%',\n    },\n    '& > button': {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(10),\n      width: '75%',\n      height: '4rem',\n    },\n    '& > div.MuiAlert-root': {\n      display: 'inline-flex',\n      width: '75%',\n    },\n  },\n}));\n\nexport { useStyles };\n","import { FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { creationRequest } from 'store/actions/create-new-bank.action';\nimport { requestGetListWithBanks } from 'store/actions/get-list.action';\nimport { ICreationBankArguments } from 'types/handlers/creation-bank.arguments';\nimport { useStyles } from './styles';\n\n/* eslint-disable */\n\nconst FormCreateBank: FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const { register, handleSubmit, errors } = useForm<ICreationBankArguments>();\n\n  const submitHandler = async (data: ICreationBankArguments, event: any) => {\n    event.preventDefault();\n    await dispatch(creationRequest(data));\n    await dispatch(requestGetListWithBanks());\n    event.target.reset();\n  };\n\n  return (\n    <>\n      <form className={classes.FormTask} onSubmit={handleSubmit(submitHandler)}>\n        <TextField\n          label=\"Bank name *\"\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          variant=\"outlined\"\n          inputRef={register({\n            required: true,\n          })}\n        />\n        {errors.name && <Alert severity=\"error\">Bank name is required</Alert>}\n\n        <TextField\n          label=\"Interest rate *\"\n          id=\"interestRate\"\n          name=\"interestRate\"\n          type=\"number\"\n          variant=\"outlined\"\n          inputRef={register({\n            required: true,\n          })}\n        />\n        {errors.interestRate && <Alert severity=\"error\">Interest rate is required</Alert>}\n\n        <TextField\n          label=\"Maximum loan *\"\n          id=\"maximumLoan\"\n          name=\"maximumLoan\"\n          type=\"number\"\n          variant=\"outlined\"\n          inputRef={register({\n            required: true,\n          })}\n        />\n        {errors.maximumLoan && <Alert severity=\"error\">Maximum loan is required</Alert>}\n\n        <TextField\n          label=\"Minimum down payment *\"\n          id=\"minimumDownPayment\"\n          name=\"minimumDownPayment\"\n          type=\"number\"\n          variant=\"outlined\"\n          inputRef={register({\n            required: true,\n          })}\n        />\n        {errors.maximumLoan && <Alert severity=\"error\">Minimum down payment is required</Alert>}\n\n        <TextField\n          label=\"Loan term *\"\n          id=\"loanTerm\"\n          name=\"loanTerm\"\n          type=\"number\"\n          variant=\"outlined\"\n          inputRef={register({\n            required: true,\n          })}\n        />\n        {errors.loanTerm && <Alert severity=\"error\">Loan term is required</Alert>}\n\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport { FormCreateBank };\n","import { FC } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nimport { FormCreateBank } from './Form';\nimport { useStyles } from './styles';\n\nconst ContainerForm: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography component=\"main\" className={classes.container}>\n        <Paper className={classes.paper} elevation={2}>\n          <Grid container justify=\"center\">\n            <Typography variant=\"h4\" component=\"h2\" gutterBottom className={classes.title}>\n              Add new bank to the list\n            </Typography>\n            <FormCreateBank />\n          </Grid>\n        </Paper>\n      </Typography>\n    </Container>\n  );\n};\n\nexport { ContainerForm };\n","import { FC, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { requestGetListWithBanks } from 'store/actions/get-list.action';\nimport { RootState } from 'store/root.store';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nimport { EmptyList } from './components/List/EmptyList';\nimport { BanksList } from './components/List';\nimport { ButtonCreate } from './components/ButtonCreate/ButtonCreate';\nimport { ButtonCancel } from './components/ButtonCancel/ButtonCancel';\nimport { ContainerForm } from './components/FormCreate';\n\nconst BanksPage: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect((): any => dispatch(requestGetListWithBanks()), [dispatch]);\n  const { loading, payload } = useSelector((state: RootState) => state.list);\n\n  const [createBank, setCreateBank] = useState<boolean>(false);\n\n  const handleClick = () => setCreateBank((prevState) => !prevState);\n\n  const buttons = createBank ? (\n    <ButtonCancel handleClick={handleClick} />\n  ) : (\n    <ButtonCreate handleClick={handleClick} />\n  );\n\n  const list = payload.length > 0 ? <BanksList list={payload} /> : <EmptyList />;\n  const form = createBank ? <ContainerForm /> : null;\n  const requestProcessing = loading ? <Spinner /> : list;\n\n  return (\n    <>\n      {requestProcessing}\n      {buttons}\n      {form}\n    </>\n  );\n};\n\nexport default BanksPage;\n"],"sourceRoot":""}